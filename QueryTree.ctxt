#BlueJ class context
comment0.params=
comment0.target=QueryTree()
comment0.text=\r\n\ Constructor\ for\ class\ QueryTree.\r\n
comment1.params=
comment1.target=boolean\ hasNextQuestion()
comment1.text=\r\n\ Checks\ to\ see\ if\ there\ is\ another\ question\ which\ needs\ to\ be\ asked.\ This\ will\r\n\ return\ true\ until\ the\ tree\ is\ at\ a\ leaf,\ and\ has\ found\ a\ final\ answer.\r\n\ \r\n\ @return\ true\ if\ another\ question\ needs\ to\ be\ asked\ on\ the\ way\ to\ a\ final\r\n\ guess.\r\n
comment2.params=
comment2.target=java.lang.String\ nextQuestion()
comment2.text=\r\n\ Method\ to\ ask\ the\ user\ the\ next\ question\ to\ narrow\ down\ the\ search.\ Accesses\r\n\ the\ data\ of\ the\ current\ node\ and\ passes\ a\ reference\ to\ that\ String.\r\n\ \r\n\ @return\ the\ question\ being\ asked.\r\n\ \r\n\ @throws\ IllegalStateException\ if\ this\ method\ is\ called\ and\ there\ are\ no\r\n\ further\ questions\ to\ ask.\r\n
comment3.params=input
comment3.target=void\ userResponse(char)
comment3.text=\r\n\ Advances\ to\ the\ next\ subtree\ in\ the\ QueryTree\ based\ on\ the\ user's\ response.\r\n\ No\ is\ always\ the\ left\ child,\ yes\ is\ always\ the\ right.\r\n\ \r\n\ @param\ input\ the\ yes\ or\ no\ response\ to\ the\ question\ in\ the\ form\ of\ 'y'\ or\ 'n'.\r\n\ \r\n\ @throws\ IllegalArgumentException\ if\ the\ input\ is\ not\ either\ y\ or\ n.\ Note\ that\r\n\ this\ is\ not\ a\ case-sensitive\ argument.\r\n
comment4.params=
comment4.target=java.lang.String\ finalGuess()
comment4.text=\r\n\ Returns\ the\ final\ guess\ of\ this\ Query\ Tree\ as\ a\ String.\r\n\ \r\n\ @return\ the\ final\ guess.\r\n\ \r\n\ @throws\ IllegalStateException\ if\ the\ Tree\ is\ not\ ready\ to\ make\ a\ final\r\n\ guess.\r\n
comment5.params=q\ item\ input
comment5.target=void\ updateTree(java.lang.String,\ java.lang.String,\ char)
comment5.text=\r\n\ Updates\ the\ QueryTree\ when\ a\ new\ item\ is\ learned.\ The\ leaf\ is\ replaced\ with\ a\r\n\ new\ branch,\ of\ which\ the\ old\ leaf\ is\ now\ a\ child.\ Its\ sibling\ will\ be\ the\ new\r\n\ item.\r\n\ \r\n\ @param\ q\ the\ new\ question\ to\ ask.\r\n\ @param\ item\ the\ new\ item\ to\ be\ added.\r\n\ @param\ input\ the\ yes\ or\ no\ answer\ to\ the\ new\ question\ which\ leads\ to\ this\ item.\r\n\ \r\n\ @throws\ IllegalArgumentException\ if\ 'y'\ or\ 'n'\ not\ passed\ to\ the\ character\r\n\ parameter.\ Note\ this\ is\ not\ case-sensitive.\r\n\ @throws\ IllegalStateException\ if\ a\ final\ guess\ has\ not\ been\ made.\r\n
comment6.params=f
comment6.target=void\ readIn(java.io.File)
comment6.text=\r\n\ Reads\ in\ a\ new\ question/answer\ set,\ altering\ the\ state\ of\ this\ QueryTree.\r\n\ This\ file\ should\ be\ in\ pre-ordered\ format.\ Files\ must\ be\ in\ the\ correct\ format\r\n\ or\ the\ method\ will\ not\ function\ properly.\ Correct\ format\ is\ as\ follows\:\r\n\ Every\ odd\ line\ must\ either\ indicate\ if\ the\ node\ to\ be\ created\ is\ a\ question\r\n\ "Q\:"\ or\ answer\ "A\:".\ The\ line\ following\ this\ must\ be\ the\ data\ to\ be\ stored\ in\ \r\n\ the\ node,\ either\ as\ the\ question\ to\ be\ asked\ or\ answer\ to\ be\ offered.\r\n\ \r\n\ @param\ f\ the\ input\ file.\r\n\ \r\n\ @throws\ IllegalStateException\ if\ a\ file\ is\ attempted\ to\ be\ read\ while\ the\ tree\r\n\ is\ currently\ in\ a\ state\ of\ guessing.\r\n\ @throws\ IllegalArgumentException\ if\ the\ file\ passed\ does\ not\ meet\ the\ specified\r\n\ format.\r\n
comment7.params=input\ node_type
comment7.target=QueryTree.Node\ buildTree(java.util.Scanner,\ java.lang.String)
comment8.params=f
comment8.target=void\ writeOut(java.io.File)
comment8.text=\r\n\ Writes\ the\ current\ set\ of\ questions/answers\ in\ to\ the\ given\ output\ file.\ Does\ \r\n\ not\ alter\ the\ current\ state\ of\ this\ QueryTree.\ \r\n\ \r\n\ @param\ f\ the\ output\ file\ to\ be\ created.\r\n\ \r\n\ @throws\ IOException\ if\ the\ output\ file\ cannot\ be\ written\ to.\r\n
comment9.params=output\ node
comment9.target=void\ writeOut(java.io.PrintStream,\ QueryTree.Node)
numComments=10
